{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Momen\\\\Desktop\\\\Prew-Crew\\\\Registering App\\\\Client Side\\\\Front End\\\\src\\\\components\\\\RegisterForm\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext } from 'react';\nimport classes from './Registering.module.css';\nimport { useHistory } from 'react-router';\nimport AuthContxt from '../../store/auth-context';\nimport { GoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registering = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isValid, setIsValid] = useState(true); //   const fullNameRef = useRef();\n  //   const userNameRef = useRef();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const history = useHistory();\n  const ctx = useContext(AuthContxt);\n  const entredPassworde = passwordRef.current.value;\n  const entredEmaile = emailRef.current.value;\n\n  if (entredEmaile.trim().length > 0 || entredPassworde.trim().length > 0) {\n    setIsValid(true);\n    return;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prev => !prev);\n  };\n\n  const responseSuccessGoogle = res => {\n    console.log(res);\n    fetch('http://localhost:3001/googlelogin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tokenId: res.tokenId,\n        email: res.profileObj.email,\n        name: res.profileObj.name\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.response === 'GoogleGood') {\n        console.log(data);\n        ctx.login(data.googleUser.tokenId);\n        history.replace('/AllUsers');\n      } else {\n        ctx.login(data.tokenId);\n        history.replace('/identefier');\n        console.log(data);\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const responseErrorGoogle = response => {\n    console.log(response);\n  };\n\n  const submitHandeler = e => {\n    e.preventDefault(); // const entredFullName = fullNameRef.current.value;\n    // const entredUserName = userNameRef.current.value;\n\n    const entredPassword = passwordRef.current.value;\n    const entredEmail = emailRef.current.value;\n\n    if (entredEmail.trim().length === 0 || entredPassword.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    const loginUrl = 'http://localhost:3001/login';\n    const signUpUrl = 'http://localhost:3001/signup';\n    let url;\n\n    if (isLogin) {\n      url = loginUrl;\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: entredEmail,\n          password: entredPassword\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.response === 'valid') {\n          ctx.login(data.user._id);\n          history.replace('/AllUsers');\n        } else {\n          console.log('Email Or Password Maybe Wrong');\n        }\n      }).catch(error => console.log(error));\n    } else {\n      url = signUpUrl;\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: entredEmail,\n          password: entredPassword\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data._id);\n        ctx.login(data._id);\n        history.replace('/identefier');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandeler,\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"773069387302-d5cih0oc4n17tn3lq9d412dm6tokh8sb.apps.googleusercontent.com\",\n          buttonText: \"Continue With Google\",\n          onSuccess: responseSuccessGoogle,\n          onFailure: responseErrorGoogle,\n          cookie: \"SameSite=Strict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.divider,\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.left\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.right\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${!isValid && classes.invalid}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"current-email\",\n          ref: emailRef,\n          type: \"email\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${!isValid && classes.invalid}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"current-password\",\n          ref: passwordRef,\n          type: \"password\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registering, \"DK8OdPGw1I8uKaN+P4wPD9SY4ak=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registering;\nexport default Registering;\n/* <div className={classes.control}>\r\n          <label>Your fullName</label>\r\n          <input ref={fullNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid fullName\r\n            </p>\r\n          </div>\r\n        )} */\n\n/* <div className={classes.control}>\r\n          <label>Your userName</label>\r\n          <input ref={userNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid userName\r\n            </p>\r\n          </div>\r\n        )} */\n\nvar _c;\n\n$RefreshReg$(_c, \"Registering\");","map":{"version":3,"sources":["C:/Users/Momen/Desktop/Prew-Crew/Registering App/Client Side/Front End/src/components/RegisterForm/RegisterForm.js"],"names":["React","useState","useRef","useContext","classes","useHistory","AuthContxt","GoogleLogin","Registering","isLogin","setIsLogin","isValid","setIsValid","emailRef","passwordRef","history","ctx","entredPassworde","current","value","entredEmaile","trim","length","switchAuthModeHandler","prev","responseSuccessGoogle","res","console","log","fetch","method","headers","body","JSON","stringify","tokenId","email","profileObj","name","then","json","data","response","login","googleUser","replace","catch","error","responseErrorGoogle","submitHandeler","e","preventDefault","entredPassword","entredEmail","loginUrl","signUpUrl","url","password","user","_id","container","auth","actions","divider","left","right","control","invalid","toggle"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useContext } from 'react';\r\nimport classes from './Registering.module.css';\r\nimport { useHistory } from 'react-router';\r\nimport AuthContxt from '../../store/auth-context';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nconst Registering = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isValid, setIsValid] = useState(true);\r\n  //   const fullNameRef = useRef();\r\n  //   const userNameRef = useRef();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const history = useHistory();\r\n  const ctx = useContext(AuthContxt);\r\n\r\n  const entredPassworde = passwordRef.current.value;\r\n  const entredEmaile = emailRef.current.value;\r\n\r\n  if (entredEmaile.trim().length > 0 || entredPassworde.trim().length > 0) {\r\n    setIsValid(true);\r\n    return;\r\n  }\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prev) => !prev);\r\n  };\r\n\r\n  const responseSuccessGoogle = (res) => {\r\n    console.log(res);\r\n    fetch('http://localhost:3001/googlelogin', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        tokenId: res.tokenId,\r\n        email: res.profileObj.email,\r\n        name: res.profileObj.name,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.response === 'GoogleGood') {\r\n          console.log(data);\r\n          ctx.login(data.googleUser.tokenId);\r\n          history.replace('/AllUsers');\r\n        } else {\r\n          ctx.login(data.tokenId);\r\n          history.replace('/identefier');\r\n          console.log(data);\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const responseErrorGoogle = (response) => {\r\n    console.log(response);\r\n  };\r\n\r\n  const submitHandeler = (e) => {\r\n    e.preventDefault();\r\n    // const entredFullName = fullNameRef.current.value;\r\n    // const entredUserName = userNameRef.current.value;\r\n    const entredPassword = passwordRef.current.value;\r\n    const entredEmail = emailRef.current.value;\r\n\r\n    if (entredEmail.trim().length === 0 || entredPassword.trim().length === 0) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n    const loginUrl = 'http://localhost:3001/login';\r\n    const signUpUrl = 'http://localhost:3001/signup';\r\n    let url;\r\n\r\n    if (isLogin) {\r\n      url = loginUrl;\r\n\r\n      fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          email: entredEmail,\r\n          password: entredPassword,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.response === 'valid') {\r\n            ctx.login(data.user._id);\r\n            history.replace('/AllUsers');\r\n          } else {\r\n            console.log('Email Or Password Maybe Wrong');\r\n          }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      url = signUpUrl;\r\n\r\n      fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          email: entredEmail,\r\n          password: entredPassword,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data._id);\r\n          ctx.login(data._id);\r\n          history.replace('/identefier');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n      <form onSubmit={submitHandeler} className={classes.auth}>\r\n        {/* Google Button */}\r\n        <div className={classes.actions}>\r\n          <GoogleLogin\r\n            clientId='773069387302-d5cih0oc4n17tn3lq9d412dm6tokh8sb.apps.googleusercontent.com'\r\n            buttonText='Continue With Google'\r\n            onSuccess={responseSuccessGoogle}\r\n            onFailure={responseErrorGoogle}\r\n            cookie='SameSite=Strict'\r\n          />\r\n        </div>\r\n        <div className={classes.divider}>\r\n          <hr className={classes.left}></hr>\r\n          <p>OR</p>\r\n          <hr className={classes.right}></hr>\r\n        </div>\r\n        <div className={`${classes.control} ${!isValid && classes.invalid}`}>\r\n          <label htmlFor='email'>Your Email</label>\r\n          <input\r\n            autoComplete='current-email'\r\n            ref={emailRef}\r\n            type='email'\r\n            id='email'\r\n          />\r\n        </div>\r\n\r\n        <div className={`${classes.control} ${!isValid && classes.invalid}`}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input\r\n            autoComplete='current-password'\r\n            ref={passwordRef}\r\n            type='password'\r\n            id='password'\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.actions}>\r\n          {/* Submit Button */}\r\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\r\n\r\n          {/* Switch Button Between ( Login // Singup ) */}\r\n          <button\r\n            type='button'\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? 'Create new account' : 'Login with existing account'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Registering;\r\n\r\n/* <div className={classes.control}>\r\n          <label>Your fullName</label>\r\n          <input ref={fullNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid fullName\r\n            </p>\r\n          </div>\r\n        )} */\r\n\r\n/* <div className={classes.control}>\r\n          <label>Your userName</label>\r\n          <input ref={userNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid userName\r\n            </p>\r\n          </div>\r\n        )} */\r\n"]},"metadata":{},"sourceType":"module"}