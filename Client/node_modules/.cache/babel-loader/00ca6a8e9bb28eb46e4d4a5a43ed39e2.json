{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Momen\\\\Desktop\\\\Prew-Crew\\\\Registering App\\\\Client Side\\\\Front End\\\\src\\\\components\\\\Registering\\\\Registering2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useContext } from 'react';\nimport classes from './Registering.module.css';\nimport { useHistory } from 'react-router';\nimport AuthContxt from '../../store/auth-context'; // import LoadingSpinner from '../../layout/LoadingSppiner';\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registering = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [isValid, setIsValid] = useState(true); // const [loading, setLoading] = useState(false);\n  //   const fullNameRef = useRef();\n  //   const userNameRef = useRef();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const history = useHistory();\n  const ctx = useContext(AuthContxt);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prev => !prev);\n  };\n\n  const submitHandeler = e => {\n    e.preventDefault(); // const entredFullName = fullNameRef.current.value;\n    // const entredUserName = userNameRef.current.value;\n\n    const entredPassword = passwordRef.current.value;\n    const entredEmail = emailRef.current.value;\n\n    if (entredEmail === '' || entredPassword === '') {\n      setIsValid(false);\n      return;\n    } else {\n      setIsValid(true);\n    }\n\n    const loginUrl = 'http://localhost:3001/login';\n    const signUpUrl = 'http://localhost:3001/signup';\n    let url;\n\n    if (isLogin) {\n      url = loginUrl;\n      axios(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          email: entredEmail,\n          password: entredPassword\n        }\n      }).then(res => {\n        if (res.data.response === 'valid') {\n          console.log(res.data.response);\n          ctx.login(res.data.user._id);\n          history.replace('/AllUsers');\n        } else {\n          console.log('kosomk');\n        }\n      }).catch(error => console.log(error));\n    } else {\n      url = signUpUrl;\n      axios(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: {\n          email: entredEmail,\n          password: entredPassword\n        }\n      }).then(res => {\n        console.log(res);\n        ctx.login(res.data._id);\n        history.replace('/identefier');\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandeler,\n      className: classes.auth,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailRef,\n          type: \"email\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !isValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px solid darkred',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'darkred',\n            textAlign: 'center',\n            fontWeight: 'bold'\n          },\n          children: \"Enter A Valid Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), !isValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px solid darkred',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'darkred',\n            textAlign: 'center',\n            fontWeight: 'bold'\n          },\n          children: \"Enter A Valid Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registering, \"NOJahi2IE4MDOmd3KqkZyJ+VEjQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registering;\nexport default Registering;\n/* <div className={classes.control}>\r\n          <label>Your fullName</label>\r\n          <input ref={fullNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid fullName\r\n            </p>\r\n          </div>\r\n        )} */\n\n/* <div className={classes.control}>\r\n          <label>Your userName</label>\r\n          <input ref={userNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid userName\r\n            </p>\r\n          </div>\r\n        )} */\n\nvar _c;\n\n$RefreshReg$(_c, \"Registering\");","map":{"version":3,"sources":["C:/Users/Momen/Desktop/Prew-Crew/Registering App/Client Side/Front End/src/components/Registering/Registering2.js"],"names":["React","useState","useRef","useContext","classes","useHistory","AuthContxt","axios","Registering","isLogin","setIsLogin","isValid","setIsValid","emailRef","passwordRef","history","ctx","switchAuthModeHandler","prev","submitHandeler","e","preventDefault","entredPassword","current","value","entredEmail","loginUrl","signUpUrl","url","method","headers","data","email","password","then","res","response","console","log","login","user","_id","replace","catch","error","container","auth","control","border","marginTop","color","textAlign","fontWeight","actions","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,OAApD;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC,CAFwB,CAGxB;AACA;AACA;;AACA,QAAMY,QAAQ,GAAGX,MAAM,EAAvB;AACA,QAAMY,WAAW,GAAGZ,MAAM,EAA1B;AACA,QAAMa,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,GAAG,GAAGb,UAAU,CAACG,UAAD,CAAtB;;AAEA,QAAMW,qBAAqB,GAAG,MAAM;AAClCP,IAAAA,UAAU,CAAEQ,IAAD,IAAU,CAACA,IAAZ,CAAV;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF,GAD4B,CAE5B;AACA;;AACA,UAAMC,cAAc,GAAGR,WAAW,CAACS,OAAZ,CAAoBC,KAA3C;AACA,UAAMC,WAAW,GAAGZ,QAAQ,CAACU,OAAT,CAAiBC,KAArC;;AAEA,QAAIC,WAAW,KAAK,EAAhB,IAAsBH,cAAc,KAAK,EAA7C,EAAiD;AAC/CV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,KAHD,MAGO;AACLA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACD,UAAMc,QAAQ,GAAG,6BAAjB;AACA,UAAMC,SAAS,GAAG,8BAAlB;AACA,QAAIC,GAAJ;;AAEA,QAAInB,OAAJ,EAAa;AACXmB,MAAAA,GAAG,GAAGF,QAAN;AAEAnB,MAAAA,KAAK,CAACqB,GAAD,EAAM;AACTC,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFA;AAGTC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAEP,WADH;AAEJQ,UAAAA,QAAQ,EAAEX;AAFN;AAHG,OAAN,CAAL,CAQGY,IARH,CAQSC,GAAD,IAAS;AACb,YAAIA,GAAG,CAACJ,IAAJ,CAASK,QAAT,KAAsB,OAA1B,EAAmC;AACjCC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACJ,IAAJ,CAASK,QAArB;AACApB,UAAAA,GAAG,CAACuB,KAAJ,CAAUJ,GAAG,CAACJ,IAAJ,CAASS,IAAT,CAAcC,GAAxB;AACA1B,UAAAA,OAAO,CAAC2B,OAAR,CAAgB,WAAhB;AACD,SAJD,MAIO;AACLL,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF,OAhBH,EAiBGK,KAjBH,CAiBUC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAjBpB;AAkBD,KArBD,MAqBO;AACLhB,MAAAA,GAAG,GAAGD,SAAN;AAEApB,MAAAA,KAAK,CAACqB,GAAD,EAAM;AACTC,QAAAA,MAAM,EAAE,MADC;AAETC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFA;AAGTC,QAAAA,IAAI,EAAE;AACJC,UAAAA,KAAK,EAAEP,WADH;AAEJQ,UAAAA,QAAQ,EAAEX;AAFN;AAHG,OAAN,CAAL,CAQGY,IARH,CAQSC,GAAD,IAAS;AACbE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAnB,QAAAA,GAAG,CAACuB,KAAJ,CAAUJ,GAAG,CAACJ,IAAJ,CAASU,GAAnB;AACA1B,QAAAA,OAAO,CAAC2B,OAAR,CAAgB,aAAhB;AACD,OAZH,EAaGC,KAbH,CAaUC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CAbpB;AAcD;AACF,GAxDD;;AA0DA,sBACE;AAAS,IAAA,SAAS,EAAExC,OAAO,CAACyC,SAA5B;AAAA,4BACE;AAAA,gBAAKpC,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEU,cAAhB;AAAgC,MAAA,SAAS,EAAEf,OAAO,CAAC0C,IAAnD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE1C,OAAO,CAAC2C,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,GAAG,EAAElC,QAAZ;AAAsB,UAAA,IAAI,EAAC,OAA3B;AAAmC,UAAA,EAAE,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOG,CAACF,OAAD,iBACC;AAAK,QAAA,KAAK,EAAE;AAAEqC,UAAAA,MAAM,EAAE,mBAAV;AAA+BC,UAAAA,SAAS,EAAE;AAA1C,SAAZ;AAAA,+BACE;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,SADF;AAELC,YAAAA,SAAS,EAAE,QAFN;AAGLC,YAAAA,UAAU,EAAE;AAHP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ,eAqBE;AAAK,QAAA,SAAS,EAAEhD,OAAO,CAAC2C,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,GAAG,EAAEjC,WAAZ;AAAyB,UAAA,IAAI,EAAC,UAA9B;AAAyC,UAAA,EAAE,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,EA2BG,CAACH,OAAD,iBACC;AAAK,QAAA,KAAK,EAAE;AAAEqC,UAAAA,MAAM,EAAE,mBAAV;AAA+BC,UAAAA,SAAS,EAAE;AAA1C,SAAZ;AAAA,+BACE;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,SADF;AAELC,YAAAA,SAAS,EAAE,QAFN;AAGLC,YAAAA,UAAU,EAAE;AAHP,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAyCE;AAAK,QAAA,SAAS,EAAEhD,OAAO,CAACiD,OAAxB;AAAA,gCACE;AAAA,oBAAS5C,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEL,OAAO,CAACkD,MAFrB;AAGE,UAAA,OAAO,EAAErC,qBAHX;AAAA,oBAKGR,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CAlID;;GAAMD,W;UAQYH,U;;;KARZG,W;AAoIN,eAAeA,WAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useRef, useContext } from 'react';\r\nimport classes from './Registering.module.css';\r\nimport { useHistory } from 'react-router';\r\nimport AuthContxt from '../../store/auth-context';\r\n// import LoadingSpinner from '../../layout/LoadingSppiner';\r\nimport axios from 'axios';\r\n\r\nconst Registering = () => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [isValid, setIsValid] = useState(true);\r\n  // const [loading, setLoading] = useState(false);\r\n  //   const fullNameRef = useRef();\r\n  //   const userNameRef = useRef();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const history = useHistory();\r\n  const ctx = useContext(AuthContxt);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prev) => !prev);\r\n  };\r\n\r\n  const submitHandeler = (e) => {\r\n    e.preventDefault();\r\n    // const entredFullName = fullNameRef.current.value;\r\n    // const entredUserName = userNameRef.current.value;\r\n    const entredPassword = passwordRef.current.value;\r\n    const entredEmail = emailRef.current.value;\r\n\r\n    if (entredEmail === '' || entredPassword === '') {\r\n      setIsValid(false);\r\n      return;\r\n    } else {\r\n      setIsValid(true);\r\n    }\r\n    const loginUrl = 'http://localhost:3001/login';\r\n    const signUpUrl = 'http://localhost:3001/signup';\r\n    let url;\r\n\r\n    if (isLogin) {\r\n      url = loginUrl;\r\n\r\n      axios(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data: {\r\n          email: entredEmail,\r\n          password: entredPassword,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.data.response === 'valid') {\r\n            console.log(res.data.response);\r\n            ctx.login(res.data.user._id);\r\n            history.replace('/AllUsers');\r\n          } else {\r\n            console.log('kosomk');\r\n          }\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      url = signUpUrl;\r\n\r\n      axios(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data: {\r\n          email: entredEmail,\r\n          password: entredPassword,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n          ctx.login(res.data._id);\r\n          history.replace('/identefier');\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\r\n      <form onSubmit={submitHandeler} className={classes.auth}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='email'>Your Email</label>\r\n          <input ref={emailRef} type='email' id='email' />\r\n        </div>\r\n\r\n        {/* ERROR HANDLING */}\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid Email\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input ref={passwordRef} type='password' id='password' />\r\n        </div>\r\n\r\n        {/* ERROR HANDLING */}\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid Password\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.actions}>\r\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\r\n          <button\r\n            type='button'\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? 'Create new account' : 'Login with existing account'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Registering;\r\n\r\n/* <div className={classes.control}>\r\n          <label>Your fullName</label>\r\n          <input ref={fullNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid fullName\r\n            </p>\r\n          </div>\r\n        )} */\r\n\r\n/* <div className={classes.control}>\r\n          <label>Your userName</label>\r\n          <input ref={userNameRef} type='text' />\r\n        </div>\r\n\r\n        {!isValid && (\r\n          <div style={{ border: '3px solid darkred', marginTop: '20px' }}>\r\n            <p\r\n              style={{\r\n                color: 'darkred',\r\n                textAlign: 'center',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Enter A Valid userName\r\n            </p>\r\n          </div>\r\n        )} */\r\n"]},"metadata":{},"sourceType":"module"}