{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Momen\\\\Desktop\\\\Nawwar\\\\Rest Api's\\\\todo list API\\\\demo app\\\\src\\\\components\\\\TodoList.js\";\nimport React from 'react';\nimport classes from './TodoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  /* \r\n  \r\n  */\n  const isCompleted = props.completed;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: isCompleted ? classes.completed : classes.uncompleted,\n      children: `completed status: ${isCompleted}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, props.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Momen/Desktop/Nawwar/Rest Api's/todo list API/demo app/src/components/TodoList.js"],"names":["React","classes","TodoList","props","isCompleted","completed","title","uncompleted","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACF;AACA;AAEE,QAAMC,WAAW,GAAGD,KAAK,CAACE,SAA1B;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAEF,WAAW,GAAGH,OAAO,CAACI,SAAX,GAAuBJ,OAAO,CAACM,WAAzD;AAAA,gBACI,qBAAoBH,WAAY;AADpC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAASD,KAAK,CAACK,EAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfD;;KAAMN,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport classes from './TodoList.module.css';\r\n\r\nconst TodoList = (props) => {\r\n  /* \r\n  \r\n\r\n*/\r\n  const isCompleted = props.completed;\r\n\r\n  return (\r\n    <ul key={props.id}>\r\n      <li>{props.title}</li>\r\n      <li className={isCompleted ? classes.completed : classes.uncompleted}>\r\n        {`completed status: ${isCompleted}`}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}